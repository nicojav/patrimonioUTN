imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: @UTNUsuarioBundle/Resources/config/services.yml}
    - { resource: @UTNDashboardMainBundle/Resources/config/services.yml}
    - { resource: "@RfidBundle/Resources/config/services.yml" }
    - { resource: "@ArduinoBundle/Resources/config/services.yml" }
    - { resource: "@ControlMovilBundle/Resources/config/services.yml" }
    - { resource: "@RetirosBundle/Resources/config/services.yml" }
    - { resource: "@BajaBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: es


sonata_admin:
  title: PATRIMONIO FRBA
  title_logo: bundles/sonataadmin/logo_utn.png
  templates:
          ## default global templates
          ## layout: UTNDashboardMainBundle::standard_layout.html.twig
  show_mosaic_button: false
  dashboard:
        groups:
            sonata.admin.group.demo1:
                            label: Patrimonio
                            icon:  '<i class="fa fa-television"></i>'
                            items:
                                - utn_dashboard_main.admin.inventario
                                - utn_dashboard_main.admin.transfer_patrimonio
                                - utn_dashboard_main.admin.bajas_patrimonio
                            roles: [ ROLE_SUPER_ADMIN ]
            sonata.admin.group.demo2:
                            label: Transferencias
                            icon:  '<i class="fa fa-play-circle"></i>'
                            items:
                                - utn_usuario.admin.transferencia
                            roles: [ ROLE_SUPER_ADMIN ]
            sonata.admin.group.demo3:
                            label: Gesti√≥n de Usuarios
                            icon:  '<i class="fa fa-users"></i>'
                            items:
                                - sonata.user.admin.user
                                - sonata.user.admin.group
                            roles: [ ROLE_SUPER_ADMIN ]
            sonata.admin.group.demo4:
                            label: Seguridad
                            icon : '<i class="fa fa-lock"></i>'
                            items:
                                - rfid.admin.log_movimiento
                                - control_movil.admin.control
#                                - control_movil.admin.control_inventario
                                - utn_dashboard_main.admin.notificacion # SACAR
                                - retiros.admin.retiro
#                                - retiros.admin.retiro_body

                            roles: [ ROLE_SUPER_ADMIN ]
            sonata.admin.group.demo5:
                            label: Bajas
                            icon:  '<i class="fa fa-play-circle"></i>'
                            items:
                                - baja.admin.baja
#                                - baja.admin.baja_inventario
                            roles: [ ROLE_SUPER_ADMIN ]

sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb

sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.admin.block.admin_list:
            contexts: [admin]

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'SonataCoreBundle:Form:datepicker.html.twig'
# Doctrine Configuration
doctrine:
    dbal:
        driver:   sqlsrv
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        types:
                  json: Sonata\Doctrine\Types\JsonType
        mapping_types:
                  xml: string
        #charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User


    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)

#doctrine:
#    dbal:
#        types:
#            json: Sonata\Doctrine\Types\JsonType


## Snappy Configuration
knp_snappy:
       pdf:
          enabled:    true
          binary:   "\"C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe\"" #"\"C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe\"" for Windows users
          options:  []